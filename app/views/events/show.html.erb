

<div id="centerwrap" class="roundeds">
  <div class="event-title "><h1><%=@event.title%><h1></div>
  <div id="content" class="rounded">
    <div id="vote-header">

    </div>
    <div class="rating-area">
      <div id="indicator" class="number-window triangle-border"><div class="number-window-glass"><div class="current-number"></div></div></div>
      <div id="spectrum-ruler"class="top-rounded">
        <div id="instructions" class="top-rounded">
            Tap the Spectrum to Give Feedback
        </div>
        <div id="rater" class="rater">
          <div id="tape">
            <span class="tape-counter first">1</span>
            <span class="tape-counter">2</span>
            <span class="tape-counter">3</span>
            <span class="tape-counter">4</span>
            <span class="tape-counter">5</span>
            <span class="tape-counter">6</span>
            <span class="tape-counter">7</span>
            <span class="tape-counter">8</span>
            <span class="tape-counter">9</span>
            <span class="tape-counter">10</span>
          <div>
        </div>
      </div>
    </div>
  
    <div id="chart-area">
      <div id="chart">

      </div>
      <div id="chartOverlay"></div>
    </div>
  
  
  </div>        
</div>


<script type="text/javascript" charset="utf-8">
  var ratingAreaLeftMargin = 20;
  var numberWidth = 52;
  var inputEnabled = true;

  var chartData;
  
  var liveUpdateAvailable = false;

  function intervalTimeout() {
    if(!liveUpdateAvailable)
    {
      populateChart();
    }
    else {
      clearInterval();
    }
    
  }

  function populateChart() {
    var chart_data_url = '/events/<%=@event.id%>/graph.json'

		$.ajax({
    	url: chart_data_url,
    	dataType: "json",
    	type: "get",
    	processData: true,
    	contentType: "application/json",
			success:function(data){
			  chartData = data;
			  plotWithOptions();
			},
			error:function(error){
			}

		});
    
  }

  function plotWithOptions() {
      $.plot($("#chart"), chartData, {
          series: {
              stack: true,
              bars: { show: true, barWidth: 0.6 }
          }
      });
  }
    
  function pushCast(user, rating, event_id){

      var vote_submit_url = '/events/<%=@event.id%>/votes/'

  		$.ajax({
      	url: vote_submit_url,
      	dataType: "json",
      	type: "POST",
      	processData: false,
      	contentType: "application/json",
      	data: "{\"vote\":{\"nickname\":\"" + user + "\", \"rating\":" + rating + "}}",
  			success:function(data){
  			},
  			error:function(error){
  			}

  		});
  }
  
  $(function () {
  // $('document').ready(function(){
    //produce a martix form the data to get the effect that I am looking for
    


    
    var currentSlot = -1
    $('#indicator').click(function(){
      if(inputEnabled)
      {
        
        inputEnabled = false;
        pushCast('testUser', currentSlot, <%=@event.id%>);
        $('.current-number').html('').animate({opacity:0}, 500, function(){
          inputEnabled=true;
          $('.current-number').html(currentSlot.toString());
          $('.current-number').animate({opacity:1}, 500);                                  
        });
      }
    });
    
    
    
    $('.tape-counter').click(function(event){
      
      if(inputEnabled)
      {
        
        inputEnabled = false;
        
        var $this = $(this);
        
        var indicatorWidth = $('#indicator').width();
        var margin = $('#rater').width()*0.020  ;
        var numberWidth = $this.width();
        var centerPos = this.offsetLeft + (numberWidth/2);
        var newPos = centerPos - (indicatorWidth/2);
        
        currentSlot = parseInt($this.html());
        // var indicatorOffset = indicatorWidth/2;
  	    
        $('.current-number').html('').animate({opacity:0}, 300, function(){});
        $('#indicator').animate({left:newPos + 'px', opacity:1}, 500, function() {
              // Animation complete.
              pushCast('testUser', currentSlot, <%=@event.id%>);
              inputEnabled=true;
              $('.current-number').html(currentSlot.toString());
              $('.current-number').animate({opacity:1}, 300);                  
              if(!liveUpdateAvailable)
              {
                // If live update is not available go ahead and increment the chart value to give the user feedback.
                var voteRate = currentSlot-1;
                var series = chartData[voteRate];
                var oldScore = series['data'][0][1];
                series['data'][0][1] = series['data'][0][1] + 1 
                plotWithOptions();                
              }

        });            
        
  
      }
      
    });    
    

    var pusher = new Pusher('b98047814c02f83dc79d');
    var channel = pusher.subscribe('<%=@event.id%>');
    channel.bind('vote_event', function(data) {
      liveUpdateAvailable = true;
      var voteRate = data.data.rating-1;
      if(voteRate>-1)
      {
        var series = chartData[voteRate];
        var oldScore = series['data'][0][1];
        series['data'][0][1] = series['data'][0][1] + 1 
        plotWithOptions();        
      }
    });
    
    //send a quick message to trigger the liveupdate
    pushCast('testUser', -1, <%=@event.id%>);  
      
    populateChart();
      
    window.setInterval("intervalTimeout()",5000);
  });  
</script>
